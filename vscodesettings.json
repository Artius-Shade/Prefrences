{
    "terminal.integrated.allowChords": false,
    "workbench.startupEditor": "none",
    "workbench.colorTheme": "Predawn",
    "workbench.settings.editor": "json",
    "workbench.settings.openDefaultSettings": true,
    "workbench.settings.useSplitJSON": true,
    // Font Size ===============================
    "editor.fontSize": 15,
    "debug.console.fontSize": 15,
    "terminal.integrated.fontSize": 15,
    // Font Weight ==============================
    "editor.fontWeight": "500",
    "terminal.integrated.fontWeight": "549",
    // Font Family===============================
    "terminal.integrated.fontFamily": "Source Code Pro",
    "editor.fontFamily": "Source Code Pro",
    "debug.console.fontFamily": "Source Code Pro",
    "editor.formatOnSave": true,
    "files.autoSave": "afterDelay",
    "explorer.confirmDelete": false,
    // Code Runner===========================
    "code-runner.executorMap": {
        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "$pythonPath -u $fullFileName",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runhaskell",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
    },
    "code-runner.clearPreviousOutput": true,
    "code-runner.saveFileBeforeRun": false,
    "code-runner.showExecutionMessage": false,
    "code-runner.runInTerminal": true,
    // LiveServer ====================================
    "liveServer.settings.donotShowInfoMsg": true,
    // GIT ===========================================
    "git.autofetch": true,
    "git.confirmSync": false,
    // Dart ==========================================
    "[dart]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.rulers": [
            80
        ],
        "editor.selectionHighlight": false,
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggestSelection": "first",
        "editor.tabCompletion": "onlySnippets",
        "editor.wordBasedSuggestions": false
    },
    "dart.openDevTools": "flutter",
    "dart.debugExternalPackageLibraries": false,
    "dart.debugSdkLibraries": false,
    // python ==========================================
    "[python]": {
        "editor.formatOnType": true
    },
    "python.defaultInterpreterPath": "/usr/bin/python3",
    // cmake ===========================================
    "cmake.configureOnOpen": true,
    "cmake.cmakePath": "/opt/homebrew/bin/cmake",
    // java ============================================
    "java.import.gradle.java.home": "/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home",
}
